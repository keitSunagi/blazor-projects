// <auto-generated />
using System;
using BlazorTodos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorTodos.Migrations
{
    [DbContext(typeof(AppTodoContext))]
    [Migration("20250317161206_AuditItemCreated")]
    partial class AuditItemCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorTodos.Models.AuditItem", b =>
                {
                    b.Property<string>("AuditionId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TodoItemId")
                        .HasColumnType("text");

                    b.HasKey("AuditionId");

                    b.HasIndex("TodoItemId");

                    b.ToTable("AuditionTodos");
                });

            modelBuilder.Entity("BlazorTodos.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("EndLine")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("BlazorTodos.Models.AuditItem", b =>
                {
                    b.HasOne("BlazorTodos.Models.Todo", "TodoItem")
                        .WithMany()
                        .HasForeignKey("TodoItemId");

                    b.Navigation("TodoItem");
                });
#pragma warning restore 612, 618
        }
    }
}
